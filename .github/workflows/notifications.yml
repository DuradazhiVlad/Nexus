name: Deployment Notifications

on:
  workflow_run:
    workflows: ["Deploy to GitHub Pages", "Configure GitHub Pages"]
    types:
      - completed

jobs:
  notify:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion != 'skipped' }}
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ github.event.workflow_run.conclusion }}" = "success" ]; then
          echo "‚úÖ Deployment successful!"
          echo "üåê Site updated at: https://duradazhivlad.github.io/Nexus/"
          echo "‚è∞ Time: $(date)"
        else
          echo "‚ùå Deployment failed!"
          echo "üîç Check logs at: ${{ github.event.workflow_run.html_url }}"
          echo "‚è∞ Time: $(date)"
        fi
        
    - name: Comment on PR (if applicable)
      if: github.event.workflow_run.event == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Deployment Status')
          );
          
          const status = '${{ github.event.workflow_run.conclusion }}' === 'success' ? '‚úÖ' : '‚ùå';
          const message = `${status} **Deployment Status**: ${{ github.event.workflow_run.conclusion }}
          
          üåê **Site**: https://duradazhivlad.github.io/Nexus/
          ‚è∞ **Time**: ${new Date().toISOString()}
          
          ---
          *Auto-generated by GitHub Actions*`;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: message
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
          } 