import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è environment –∑–º—ñ–Ω–Ω–∏—Ö
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL!;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY!;

const supabase = createClient(supabaseUrl, supabaseKey);

const checkAndCreateTables = async () => {
  console.log('üöÄ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö —Ç–∞–±–ª–∏—Ü—å...');

  try {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ user_personal_info
    console.log('üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ user_personal_info...');
    const { error: error1 } = await supabase
      .from('user_personal_info')
      .select('id')
      .limit(1);

    if (error1) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü—è user_personal_info –Ω–µ —ñ—Å–Ω—É—î:', error1.message);
      console.log('üìã –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏:', error1.code);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è user_personal_info —ñ—Å–Ω—É—î');
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ user_photos
    console.log('üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ user_photos...');
    const { error: error2 } = await supabase
      .from('user_photos')
      .select('id')
      .limit(1);

    if (error2) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü—è user_photos –Ω–µ —ñ—Å–Ω—É—î:', error2.message);
      console.log('üìã –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏:', error2.code);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è user_photos —ñ—Å–Ω—É—î');
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ user_videos
    console.log('üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ user_videos...');
    const { error: error3 } = await supabase
      .from('user_videos')
      .select('id')
      .limit(1);

    if (error3) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü—è user_videos –Ω–µ —ñ—Å–Ω—É—î:', error3.message);
      console.log('üìã –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏:', error3.code);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è user_videos —ñ—Å–Ω—É—î');
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ profiles
    console.log('üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ profiles...');
    const { error: error4 } = await supabase
      .from('profiles')
      .select('id')
      .limit(1);

    if (error4) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü—è profiles –Ω–µ —ñ—Å–Ω—É—î:', error4.message);
      console.log('üìã –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏:', error4.code);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è profiles —ñ—Å–Ω—É—î');
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ posts
    console.log('üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ posts...');
    const { data: postsData, error: postsError } = await supabase
      .from('posts')
      .select('id, user_id, content, created_at')
      .limit(5);

    if (postsError) {
      console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ —Ç–∞–±–ª–∏—Ü–µ—é posts:', postsError.message);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è posts –ø—Ä–∞—Ü—é—î. –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç—ñ–≤:', postsData?.length || 0);
      if (postsData && postsData.length > 0) {
        console.log('üìã –ü—Ä–∏–∫–ª–∞–¥ –ø–æ—Å—Ç–∞:', postsData[0]);
      }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ user_profiles
    console.log('üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ user_profiles...');
    const { data: profilesData, error: profilesError } = await supabase
      .from('user_profiles')
      .select('id, name, email')
      .limit(3);

    if (profilesError) {
      console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ —Ç–∞–±–ª–∏—Ü–µ—é user_profiles:', profilesError.message);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è user_profiles –ø—Ä–∞—Ü—é—î. –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ—ñ–ª—ñ–≤:', profilesData?.length || 0);
    }

    console.log('üéâ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
  }
};

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
checkAndCreateTables();