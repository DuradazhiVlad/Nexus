// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ñ user_profiles
import { supabase } from './src/lib/supabase.js';

async function checkUserProfilesTable() {
  try {
    console.log('üîç Checking user_profiles table...');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —Ç–∞–±–ª–∏—Ü—è
    const { data, error } = await supabase
      .from('user_profiles')
      .select('*')
      .limit(1);
    
    if (error) {
      console.error('‚ùå Error accessing user_profiles table:', error);
      console.log('üìù Table might not exist or have permission issues');
      return false;
    }
    
    console.log('‚úÖ user_profiles table exists');
    console.log('üìä Sample data:', data);
    return true;
  } catch (error) {
    console.error('‚ùå Unexpected error:', error);
    return false;
  }
}

async function getCurrentUser() {
  try {
    const { data: { user }, error } = await supabase.auth.getUser();
    
    if (error) {
      console.error('‚ùå Auth error:', error);
      return null;
    }
    
    console.log('üë§ Current user:', user?.email);
    return user;
  } catch (error) {
    console.error('‚ùå Error getting user:', error);
    return null;
  }
}

async function testProfileOperations() {
  console.log('üöÄ Starting profile debug...');
  
  const tableExists = await checkUserProfilesTable();
  const user = await getCurrentUser();
  
  if (!tableExists) {
    console.log('‚ùå Cannot proceed - user_profiles table does not exist');
    return;
  }
  
  if (!user) {
    console.log('‚ùå Cannot proceed - no authenticated user');
    return;
  }
  
  // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  try {
    const { data: profile, error } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('auth_user_id', user.id)
      .single();
    
    if (error && error.code !== 'PGRST116') {
      console.error('‚ùå Error getting profile:', error);
    } else if (error && error.code === 'PGRST116') {
      console.log('üìù No profile found for user');
    } else {
      console.log('‚úÖ User profile found:', profile);
    }
  } catch (error) {
    console.error('‚ùå Unexpected error getting profile:', error);
  }
}

testProfileOperations();