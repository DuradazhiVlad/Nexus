create table public.albums (
  id uuid not null default gen_random_uuid (),
  name text not null,
  description text null,
  user_id uuid not null,
  created_at timestamp with time zone null default now(),
  is_public boolean null default false,
  constraint albums_pkey primary key (id),
  constraint albums_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create index IF not exists albums_user_id_idx on public.albums using btree (user_id) TABLESPACE pg_default;

create index IF not exists albums_created_at_idx on public.albums using btree (created_at desc) TABLESPACE pg_default;

create table public.conversations (
  id uuid not null default gen_random_uuid (),
  participant1_id uuid not null,
  participant2_id uuid not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint conversations_pkey primary key (id),
  constraint conversations_participant1_id_participant2_id_key unique (participant1_id, participant2_id),
  constraint conversations_participant1_id_fkey foreign KEY (participant1_id) references auth.users (id) on delete CASCADE,
  constraint conversations_participant2_id_fkey foreign KEY (participant2_id) references auth.users (id) on delete CASCADE,
  constraint conversations_check check ((participant1_id <> participant2_id))
) TABLESPACE pg_default;

create index IF not exists idx_conversations_participant1 on public.conversations using btree (participant1_id) TABLESPACE pg_default;

create index IF not exists idx_conversations_participant2 on public.conversations using btree (participant2_id) TABLESPACE pg_default;

create trigger update_conversations_updated_at BEFORE
update on conversations for EACH row
execute FUNCTION update_updated_at_column ();
create table public.friend_requests (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  friend_id uuid not null,
  status text null default 'pending'::text,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint friend_requests_pkey primary key (id),
  constraint friend_requests_user_id_friend_id_key unique (user_id, friend_id),
  constraint friend_requests_status_check check (
    (
      status = any (
        array[
          'pending'::text,
          'accepted'::text,
          'rejected'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_friend_requests_user_id on public.friend_requests using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_friend_requests_friend_id on public.friend_requests using btree (friend_id) TABLESPACE pg_default;

create index IF not exists idx_friend_requests_status on public.friend_requests using btree (status) TABLESPACE pg_default;

create trigger update_friend_requests_updated_at BEFORE
update on friend_requests for EACH row
execute FUNCTION update_updated_at_column ();
create table public.friendships (
  id uuid not null default gen_random_uuid (),
  user1_id uuid not null,
  user2_id uuid not null,
  created_at timestamp with time zone null default now(),
  constraint friendships_pkey primary key (id),
  constraint friendships_user1_id_user2_id_key unique (user1_id, user2_id),
  constraint friendships_check check ((user1_id <> user2_id))
) TABLESPACE pg_default;

create index IF not exists idx_friendships_user1_id on public.friendships using btree (user1_id) TABLESPACE pg_default;

create index IF not exists idx_friendships_user2_id on public.friendships using btree (user2_id) TABLESPACE pg_default;
create table public.group_members (
  id uuid not null default gen_random_uuid (),
  group_id uuid not null,
  user_id uuid not null,
  role text null default 'member'::text,
  is_active boolean null default true,
  joined_at timestamp with time zone null default now(),
  constraint group_members_pkey primary key (id),
  constraint group_members_group_id_user_id_key unique (group_id, user_id),
  constraint group_members_group_id_fkey foreign KEY (group_id) references groups (id) on delete CASCADE,
  constraint group_members_role_check check (
    (
      role = any (
        array['admin'::text, 'moderator'::text, 'member'::text]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_group_members_group_id on public.group_members using btree (group_id) TABLESPACE pg_default;

create index IF not exists idx_group_members_user_id on public.group_members using btree (user_id) TABLESPACE pg_default;
create table public.group_post_media (
  id uuid not null default gen_random_uuid (),
  post_id uuid not null,
  type text not null,
  url text not null,
  filename text null,
  file_size integer null,
  thumbnail_url text null,
  created_at timestamp with time zone null default now(),
  constraint group_post_media_pkey primary key (id),
  constraint group_post_media_post_id_fkey foreign KEY (post_id) references group_posts (id) on delete CASCADE,
  constraint group_post_media_type_check check (
    (type = any (array['image'::text, 'video'::text]))
  )
) TABLESPACE pg_default;

create index IF not exists idx_group_post_media_post_id on public.group_post_media using btree (post_id) TABLESPACE pg_default;
create table public.group_posts (
  id uuid not null default gen_random_uuid (),
  group_id uuid not null,
  author_id uuid not null,
  content text not null,
  media_url text null,
  media_type text null,
  likes_count integer null default 0,
  comments_count integer null default 0,
  is_pinned boolean null default false,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint group_posts_pkey primary key (id),
  constraint group_posts_group_id_fkey foreign KEY (group_id) references groups (id) on delete CASCADE,
  constraint group_posts_media_type_check check (
    (
      media_type = any (
        array['photo'::text, 'video'::text, 'document'::text]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_group_posts_group_id on public.group_posts using btree (group_id) TABLESPACE pg_default;

create index IF not exists idx_group_posts_author_id on public.group_posts using btree (author_id) TABLESPACE pg_default;

create trigger update_group_posts_updated_at BEFORE
update on group_posts for EACH row
execute FUNCTION update_updated_at_column ();
create table public.groups (
  id uuid not null default gen_random_uuid (),
  name text not null,
  description text null,
  avatar text null,
  cover_image text null,
  is_public boolean null default true,
  created_by uuid not null,
  category text null,
  location text null,
  website text null,
  contactemail text null,
  rules jsonb null default '[]'::jsonb,
  member_count integer null default 1,
  post_count integer null default 0,
  is_active boolean null default true,
  is_verified boolean null default false,
  last_activity timestamp with time zone null default now(),
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint groups_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists idx_groups_created_by on public.groups using btree (created_by) TABLESPACE pg_default;

create index IF not exists idx_groups_is_public on public.groups using btree (is_public) TABLESPACE pg_default;

create index IF not exists idx_groups_category on public.groups using btree (category) TABLESPACE pg_default;

create trigger update_groups_updated_at BEFORE
update on groups for EACH row
execute FUNCTION update_updated_at_column ();
create table public.messages (
  id uuid not null default gen_random_uuid (),
  conversation_id uuid not null,
  sender_id uuid not null,
  content text not null,
  is_read boolean null default false,
  created_at timestamp with time zone null default now(),
  constraint messages_pkey primary key (id),
  constraint messages_conversation_id_fkey foreign KEY (conversation_id) references conversations (id) on delete CASCADE,
  constraint messages_sender_id_fkey foreign KEY (sender_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_messages_conversation_id on public.messages using btree (conversation_id) TABLESPACE pg_default;

create index IF not exists idx_messages_sender_id on public.messages using btree (sender_id) TABLESPACE pg_default;

create index IF not exists idx_messages_created_at on public.messages using btree (created_at) TABLESPACE pg_default;

create trigger trigger_update_conversation_timestamp
after INSERT on messages for EACH row
execute FUNCTION update_conversation_timestamp ();
create table public.post_comments (
  id uuid not null default gen_random_uuid (),
  post_id uuid not null,
  user_id uuid not null,
  content text not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint post_comments_pkey primary key (id),
  constraint post_comments_post_id_fkey foreign KEY (post_id) references posts (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_post_comments_post_id on public.post_comments using btree (post_id) TABLESPACE pg_default;

create index IF not exists idx_post_comments_user_id on public.post_comments using btree (user_id) TABLESPACE pg_default;

create trigger trigger_update_post_comments_count
after INSERT
or DELETE on post_comments for EACH row
execute FUNCTION update_post_comments_count ();

create trigger update_post_comments_updated_at BEFORE
update on post_comments for EACH row
execute FUNCTION update_updated_at_column ();
create table public.post_likes (
  id uuid not null default gen_random_uuid (),
  post_id uuid not null,
  user_id uuid not null,
  created_at timestamp with time zone null default now(),
  constraint post_likes_pkey primary key (id),
  constraint post_likes_post_id_user_id_key unique (post_id, user_id),
  constraint post_likes_post_id_fkey foreign KEY (post_id) references posts (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_post_likes_post_id on public.post_likes using btree (post_id) TABLESPACE pg_default;

create index IF not exists idx_post_likes_user_id on public.post_likes using btree (user_id) TABLESPACE pg_default;

create trigger trigger_update_post_likes_count
after INSERT
or DELETE on post_likes for EACH row
execute FUNCTION update_post_likes_count ();
create table public.posts (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  content text not null,
  media_url text null,
  media_type text null,
  likes_count integer null default 0,
  comments_count integer null default 0,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint posts_pkey primary key (id),
  constraint posts_media_type_check check (
    (
      media_type = any (
        array['photo'::text, 'video'::text, 'document'::text]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_posts_user_id on public.posts using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_posts_created_at on public.posts using btree (created_at) TABLESPACE pg_default;

create trigger update_posts_updated_at BEFORE
update on posts for EACH row
execute FUNCTION update_updated_at_column ();
create table public.posts (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  content text not null,
  media_url text null,
  media_type text null,
  likes_count integer null default 0,
  comments_count integer null default 0,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint posts_pkey primary key (id),
  constraint posts_media_type_check check (
    (
      media_type = any (
        array['photo'::text, 'video'::text, 'document'::text]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_posts_user_id on public.posts using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_posts_created_at on public.posts using btree (created_at) TABLESPACE pg_default;

create trigger update_posts_updated_at BEFORE
update on posts for EACH row
execute FUNCTION update_updated_at_column ();

помилки мої також виправи
Initializing AuthService...
index-BFq_XOuG.js:9 🔍 Loading profile...
index-BFq_XOuG.js:17 🔄 Posts useEffect triggered: {currentUser: false, profile: false, profileId: undefined}
index-BFq_XOuG.js:9 Found existing session for: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Getting current user profile...
index-BFq_XOuG.js:9 ✅ Authenticated user: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Getting current user profile...
index-BFq_XOuG.js:17 🔄 Posts useEffect triggered: {currentUser: true, profile: false, profileId: undefined}
2index-BFq_XOuG.js:9 ✅ User authenticated: dvlad1995p@gmail.com
supabase-BmfSc9Wy.js:7  GET https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?select=*&auth_user_id=eq.d6303d2c-cb7c-45c0-a76e-a299a05f44aa 406 (Not Acceptable)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 🔍 Raw profile data from database: null
index-BFq_XOuG.js:9 📝 User profile not found, creating new one...
index-BFq_XOuG.js:9 📝 Creating new user profile for: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 📋 New profile data: {auth_user_id: 'd6303d2c-cb7c-45c0-a76e-a299a05f44aa', name: 'Влад Дурадажи', last_name: '', email: 'dvlad1995p@gmail.com', hobbies: Array(0), …}
supabase-BmfSc9Wy.js:7  GET https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?select=*&auth_user_id=eq.d6303d2c-cb7c-45c0-a76e-a299a05f44aa 406 (Not Acceptable)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 🔍 Raw profile data from database: null
index-BFq_XOuG.js:9 📝 User profile not found, creating new one...
index-BFq_XOuG.js:9 📝 Creating new user profile for: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 📋 New profile data: {auth_user_id: 'd6303d2c-cb7c-45c0-a76e-a299a05f44aa', name: 'Влад Дурадажи', last_name: '', email: 'dvlad1995p@gmail.com', hobbies: Array(0), …}
supabase-BmfSc9Wy.js:7  POST https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?columns=%22auth_user_id%22%2C%22name%22%2C%22last_name%22%2C%22email%22%2C%22hobbies%22%2C%22languages%22%2C%22notifications%22%2C%22privacy%22%2C%22email_verified%22&select=* 400 (Bad Request)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 ❌ Error creating user profile: {code: 'PGRST204', details: null, hint: null, message: "Could not find the 'email_verified' column of 'user_profiles' in the schema cache"}
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 ❌ Error creating user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async R (index-BFq_XOuG.js:9:32998)
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 ❌ Error getting current user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async R (index-BFq_XOuG.js:9:32998)
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 Error loading profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async R (index-BFq_XOuG.js:9:32998)
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
supabase-BmfSc9Wy.js:7  POST https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?columns=%22auth_user_id%22%2C%22name%22%2C%22last_name%22%2C%22email%22%2C%22hobbies%22%2C%22languages%22%2C%22notifications%22%2C%22privacy%22%2C%22email_verified%22&select=* 400 (Bad Request)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 ❌ Error creating user profile: {code: 'PGRST204', details: null, hint: null, message: "Could not find the 'email_verified' column of 'user_profiles' in the schema cache"}
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
initialize @ index-BFq_XOuG.js:9
await in initialize
(анонімно) @ index-BFq_XOuG.js:104
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 ❌ Error creating user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async os.initialize (index-BFq_XOuG.js:9:9968)
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
initialize @ index-BFq_XOuG.js:9
await in initialize
(анонімно) @ index-BFq_XOuG.js:104
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 ❌ Error getting current user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async os.initialize (index-BFq_XOuG.js:9:9968)
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
initialize @ index-BFq_XOuG.js:9
await in initialize
(анонімно) @ index-BFq_XOuG.js:104
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 Error loading profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async os.initialize (index-BFq_XOuG.js:9:9968)
initialize @ index-BFq_XOuG.js:9
await in initialize
(анонімно) @ index-BFq_XOuG.js:104
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 Auth state change: INITIAL_SESSION dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Getting current user profile...
index-BFq_XOuG.js:9 ✅ User authenticated: dvlad1995p@gmail.com
supabase-BmfSc9Wy.js:7  GET https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?select=*&auth_user_id=eq.d6303d2c-cb7c-45c0-a76e-a299a05f44aa 406 (Not Acceptable)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 🔍 Raw profile data from database: null
index-BFq_XOuG.js:9 📝 User profile not found, creating new one...
index-BFq_XOuG.js:9 📝 Creating new user profile for: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 📋 New profile data: {auth_user_id: 'd6303d2c-cb7c-45c0-a76e-a299a05f44aa', name: 'Влад Дурадажи', last_name: '', email: 'dvlad1995p@gmail.com', hobbies: Array(0), …}
supabase-BmfSc9Wy.js:7  POST https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?columns=%22auth_user_id%22%2C%22name%22%2C%22last_name%22%2C%22email%22%2C%22hobbies%22%2C%22languages%22%2C%22notifications%22%2C%22privacy%22%2C%22email_verified%22&select=* 400 (Bad Request)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 ❌ Error creating user profile: {code: 'PGRST204', details: null, hint: null, message: "Could not find the 'email_verified' column of 'user_profiles' in the schema cache"}
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
(анонімно) @ index-BFq_XOuG.js:9
(анонімно) @ supabase-BmfSc9Wy.js:8
_useSession @ supabase-BmfSc9Wy.js:8
await in _useSession
_emitInitialSession @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
index-BFq_XOuG.js:9 ❌ Error creating user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async Object.callback (index-BFq_XOuG.js:9:10511)
    at async supabase-BmfSc9Wy.js:8:36040
    at async xr._useSession (supabase-BmfSc9Wy.js:8:28200)
    at async xr._emitInitialSession (supabase-BmfSc9Wy.js:8:35948)
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
(анонімно) @ index-BFq_XOuG.js:9
(анонімно) @ supabase-BmfSc9Wy.js:8
_useSession @ supabase-BmfSc9Wy.js:8
await in _useSession
_emitInitialSession @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
index-BFq_XOuG.js:9 ❌ Error getting current user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async Object.callback (index-BFq_XOuG.js:9:10511)
    at async supabase-BmfSc9Wy.js:8:36040
    at async xr._useSession (supabase-BmfSc9Wy.js:8:28200)
    at async xr._emitInitialSession (supabase-BmfSc9Wy.js:8:35948)
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
(анонімно) @ index-BFq_XOuG.js:9
(анонімно) @ supabase-BmfSc9Wy.js:8
_useSession @ supabase-BmfSc9Wy.js:8
await in _useSession
_emitInitialSession @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
index-BFq_XOuG.js:9 Error loading profile on auth change: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async Object.callback (index-BFq_XOuG.js:9:10511)
    at async supabase-BmfSc9Wy.js:8:36040
    at async xr._useSession (supabase-BmfSc9Wy.js:8:28200)
    at async xr._emitInitialSession (supabase-BmfSc9Wy.js:8:35948)
(анонімно) @ index-BFq_XOuG.js:9
await in (анонімно)
(анонімно) @ supabase-BmfSc9Wy.js:8
_useSession @ supabase-BmfSc9Wy.js:8
await in _useSession
_emitInitialSession @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
(анонімно) @ supabase-BmfSc9Wy.js:8
index-BFq_XOuG.js:9 Auth state change: SIGNED_OUT no user
index-BFq_XOuG.js:9 🚀 Starting login process...
index-BFq_XOuG.js:9 Auth state change: SIGNED_IN dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Getting current user profile...
index-BFq_XOuG.js:9 ✅ User authenticated: dvlad1995p@gmail.com
supabase-BmfSc9Wy.js:7  GET https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?select=*&auth_user_id=eq.d6303d2c-cb7c-45c0-a76e-a299a05f44aa 406 (Not Acceptable)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 🔍 Raw profile data from database: null
index-BFq_XOuG.js:9 📝 User profile not found, creating new one...
index-BFq_XOuG.js:9 📝 Creating new user profile for: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 📋 New profile data: {auth_user_id: 'd6303d2c-cb7c-45c0-a76e-a299a05f44aa', name: 'Влад Дурадажи', last_name: '', email: 'dvlad1995p@gmail.com', hobbies: Array(0), …}
supabase-BmfSc9Wy.js:7  POST https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?columns=%22auth_user_id%22%2C%22name%22%2C%22last_name%22%2C%22email%22%2C%22hobbies%22%2C%22languages%22%2C%22notifications%22%2C%22privacy%22%2C%22email_verified%22&select=* 400 (Bad Request)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 ❌ Error creating user profile: {code: 'PGRST204', details: null, hint: null, message: "Could not find the 'email_verified' column of 'user_profiles' in the schema cache"}
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
(анонімно) @ index-BFq_XOuG.js:9
(анонімно) @ supabase-BmfSc9Wy.js:8
_notifyAllSubscribers @ supabase-BmfSc9Wy.js:8
signInWithPassword @ supabase-BmfSc9Wy.js:8
await in signInWithPassword
z @ index-BFq_XOuG.js:9
xc @ vendor-BPcwhftq.js:29
Nc @ vendor-BPcwhftq.js:29
zc @ vendor-BPcwhftq.js:29
ui @ vendor-BPcwhftq.js:29
Hs @ vendor-BPcwhftq.js:29
(анонімно) @ vendor-BPcwhftq.js:29
Eo @ vendor-BPcwhftq.js:32
ps @ vendor-BPcwhftq.js:29
Rl @ vendor-BPcwhftq.js:29
Gu @ vendor-BPcwhftq.js:29
Wc @ vendor-BPcwhftq.js:29
index-BFq_XOuG.js:9 ❌ Error creating user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async Object.callback (index-BFq_XOuG.js:9:10511)
    at async supabase-BmfSc9Wy.js:8:41166
    at async Promise.all (Nexus/index 2)
    at async xr._notifyAllSubscribers (supabase-BmfSc9Wy.js:8:41213)
    at async xr.signInWithPassword (supabase-BmfSc9Wy.js:8:21110)
    at async z (index-BFq_XOuG.js:9:12937)
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
(анонімно) @ index-BFq_XOuG.js:9
(анонімно) @ supabase-BmfSc9Wy.js:8
_notifyAllSubscribers @ supabase-BmfSc9Wy.js:8
signInWithPassword @ supabase-BmfSc9Wy.js:8
await in signInWithPassword
z @ index-BFq_XOuG.js:9
xc @ vendor-BPcwhftq.js:29
Nc @ vendor-BPcwhftq.js:29
zc @ vendor-BPcwhftq.js:29
ui @ vendor-BPcwhftq.js:29
Hs @ vendor-BPcwhftq.js:29
(анонімно) @ vendor-BPcwhftq.js:29
Eo @ vendor-BPcwhftq.js:32
ps @ vendor-BPcwhftq.js:29
Rl @ vendor-BPcwhftq.js:29
Gu @ vendor-BPcwhftq.js:29
Wc @ vendor-BPcwhftq.js:29
index-BFq_XOuG.js:9 ❌ Error getting current user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async Object.callback (index-BFq_XOuG.js:9:10511)
    at async supabase-BmfSc9Wy.js:8:41166
    at async Promise.all (Nexus/index 2)
    at async xr._notifyAllSubscribers (supabase-BmfSc9Wy.js:8:41213)
    at async xr.signInWithPassword (supabase-BmfSc9Wy.js:8:21110)
    at async z (index-BFq_XOuG.js:9:12937)
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
(анонімно) @ index-BFq_XOuG.js:9
(анонімно) @ supabase-BmfSc9Wy.js:8
_notifyAllSubscribers @ supabase-BmfSc9Wy.js:8
signInWithPassword @ supabase-BmfSc9Wy.js:8
await in signInWithPassword
z @ index-BFq_XOuG.js:9
xc @ vendor-BPcwhftq.js:29
Nc @ vendor-BPcwhftq.js:29
zc @ vendor-BPcwhftq.js:29
ui @ vendor-BPcwhftq.js:29
Hs @ vendor-BPcwhftq.js:29
(анонімно) @ vendor-BPcwhftq.js:29
Eo @ vendor-BPcwhftq.js:32
ps @ vendor-BPcwhftq.js:29
Rl @ vendor-BPcwhftq.js:29
Gu @ vendor-BPcwhftq.js:29
Wc @ vendor-BPcwhftq.js:29
index-BFq_XOuG.js:9 Error loading profile on auth change: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async Object.callback (index-BFq_XOuG.js:9:10511)
    at async supabase-BmfSc9Wy.js:8:41166
    at async Promise.all (Nexus/index 2)
    at async xr._notifyAllSubscribers (supabase-BmfSc9Wy.js:8:41213)
    at async xr.signInWithPassword (supabase-BmfSc9Wy.js:8:21110)
    at async z (index-BFq_XOuG.js:9:12937)
(анонімно) @ index-BFq_XOuG.js:9
await in (анонімно)
(анонімно) @ supabase-BmfSc9Wy.js:8
_notifyAllSubscribers @ supabase-BmfSc9Wy.js:8
signInWithPassword @ supabase-BmfSc9Wy.js:8
await in signInWithPassword
z @ index-BFq_XOuG.js:9
xc @ vendor-BPcwhftq.js:29
Nc @ vendor-BPcwhftq.js:29
zc @ vendor-BPcwhftq.js:29
ui @ vendor-BPcwhftq.js:29
Hs @ vendor-BPcwhftq.js:29
(анонімно) @ vendor-BPcwhftq.js:29
Eo @ vendor-BPcwhftq.js:32
ps @ vendor-BPcwhftq.js:29
Rl @ vendor-BPcwhftq.js:29
Gu @ vendor-BPcwhftq.js:29
Wc @ vendor-BPcwhftq.js:29
index-BFq_XOuG.js:9 ✅ Login successful: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Loading profile...
index-BFq_XOuG.js:17 🔄 Posts useEffect triggered: {currentUser: false, profile: false, profileId: undefined}
index-BFq_XOuG.js:9 ✅ Authenticated user: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Getting current user profile...
index-BFq_XOuG.js:17 🔄 Posts useEffect triggered: {currentUser: true, profile: false, profileId: undefined}
index-BFq_XOuG.js:9 ✅ User authenticated: dvlad1995p@gmail.com
supabase-BmfSc9Wy.js:7  GET https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?select=*&auth_user_id=eq.d6303d2c-cb7c-45c0-a76e-a299a05f44aa 406 (Not Acceptable)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 🔍 Raw profile data from database: null
index-BFq_XOuG.js:9 📝 User profile not found, creating new one...
index-BFq_XOuG.js:9 📝 Creating new user profile for: dvlad1995p@gmail.com
index-BFq_XOuG.js:9 📋 New profile data: {auth_user_id: 'd6303d2c-cb7c-45c0-a76e-a299a05f44aa', name: 'Влад Дурадажи', last_name: '', email: 'dvlad1995p@gmail.com', hobbies: Array(0), …}
supabase-BmfSc9Wy.js:7  POST https://gtfgvqttfydelzgvgwly.supabase.co/rest/v1/user_profiles?columns=%22auth_user_id%22%2C%22name%22%2C%22last_name%22%2C%22email%22%2C%22hobbies%22%2C%22languages%22%2C%22notifications%22%2C%22privacy%22%2C%22email_verified%22&select=* 400 (Bad Request)
(анонімно) @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
a @ supabase-BmfSc9Wy.js:7
Promise.then
h @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
Ls @ supabase-BmfSc9Wy.js:7
(анонімно) @ supabase-BmfSc9Wy.js:7
then @ supabase-BmfSc9Wy.js:2
index-BFq_XOuG.js:9 ❌ Error creating user profile: {code: 'PGRST204', details: null, hint: null, message: "Could not find the 'email_verified' column of 'user_profiles' in the schema cache"}
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 ❌ Error creating user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async R (index-BFq_XOuG.js:9:32998)
createUserProfile @ index-BFq_XOuG.js:9
await in createUserProfile
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 ❌ Error getting current user profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async R (index-BFq_XOuG.js:9:32998)
getCurrentUserProfile @ index-BFq_XOuG.js:9
await in getCurrentUserProfile
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 Error loading profile: Error: Failed to create user profile: Could not find the 'email_verified' column of 'user_profiles' in the schema cache
    at Ne.createUserProfile (index-BFq_XOuG.js:9:4512)
    at async Ne.getCurrentUserProfile (index-BFq_XOuG.js:9:2007)
    at async R (index-BFq_XOuG.js:9:32998)
R @ index-BFq_XOuG.js:9
await in R
(анонімно) @ index-BFq_XOuG.js:9
ol @ vendor-BPcwhftq.js:32
Gn @ vendor-BPcwhftq.js:32
(анонімно) @ vendor-BPcwhftq.js:32
E @ vendor-BPcwhftq.js:17
ot @ vendor-BPcwhftq.js:17
index-BFq_XOuG.js:9 Auth state change: SIGNED_IN dvlad1995p@gmail.com
index-BFq_XOuG.js:9 🔍 Getting current user profile...